/* UNIVERSIDAD DE PAMPLONA
    Ingeniería de Sistemas - Matemáticas discretas: Grafos
    M.Sc. Luis Armando Portilla Granados
    Abril 24 de 2018 - Actualizado Marzo de 2019
*/
package pintar;

//import java.awt.Graphics2D;
//import java.awt.BasicStroke; // 2d para el grosor de la línea
//import java.awt.Color;  // en el frame no se usan, se pinta en las clases
//import java.awt.Graphics;
//import java.awt.event.MouseEvent;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author Mariana
 */
public class Ventana extends javax.swing.JFrame {
    static final int t = 25;  // tamaño
    static Nodos[] nodos = new Nodos[t];
    static Aristas aristas[] = new Aristas[t*2];
    static int[][] matrizAd = new int[t][t];
    static int[][] matrizIn = new int[t][t*2];
    int indiceNodos = 0;
    int indiceAristas = 0;
    
    Nodos nodoSelec1 = null, nodoSelec2 = null;

    /**
     * Creates new form ventana
     */
    public Ventana() {
        initComponents();
        setIconImage(new ImageIcon(getClass().getResource ("/imagenes/grafoIcon.png")).getImage());
        //setLocation(400, 100);
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Matemáticas discretas - Grafos");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Algoritmos"));

        jButton3.setText("AEM1 Eliminando A");

        jButton4.setText("AEM2 Agregando A");

        jButton5.setText("AEM Algoritmo de Prim");

        jButton6.setText("AEM Vecino mas Próx");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Grafo"));
        jPanel2.setPreferredSize(new java.awt.Dimension(365, 365));
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 357, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 344, Short.MAX_VALUE)
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Instrucciones"));

        jLabel1.setText("NODOS:  Agrega nodos haciendo clic sobre el panel \"Grafo\""); // NOI18N

        jLabel2.setText("ARISTAS: Agrega aristas haciendo clic derecho  sobre el par de nodos que va a unir "); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 459, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Matriz de adyacencia"));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder("Matriz de incidencia"));

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jScrollPane3.setBorder(javax.swing.BorderFactory.createTitledBorder("Definición del grafo"));
        jScrollPane3.setPreferredSize(new java.awt.Dimension(80, 117));

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane3.setViewportView(jTextArea3);

        jButton1.setText("Nuevo grafo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Salir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(19, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(27, 27, 27))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    // Define a G(V,E)
    static String definicion(Nodos v[], int in, Aristas a[], int ia) {
        String cadena = "V = { ";
        if (v[0] != null) {
            for (int i = 0; i < in - 1; i++) {
                cadena += v[i].getNombre() + ", ";
            }
            cadena += v[in - 1].getNombre();
        }

        cadena += " }\nA = { ";
        if (a[0] != null) {
            for (int i = 0; i < ia - 1; i++) {
                // si nombre de aristas                
                //cadena += a[i].getN1().getNombre() + a[i].getN2().getNombre() + ", " ; 
                
                //utilizando el nombre de la arista generada desde los nombres de los nodos en la clase Aristas
                cadena += a[i].getNombreA() + ", " ;  
            }
            cadena += a[ia - 1].getN1().getNombre() + a[ia-1].getN2().getNombre();
        }

        cadena += " }";
        return cadena;
    }
    // se encadena texto con las colmunas y filas + contenido de la matrizAd de adyacencia
    static String mostrarAd(int m[][], int in) {
        String cadena = "";
        int i, j, k;
        char filas = 65;
        char columnas = 65;
        for (k = 65; k < (65 + in); k++) {
            cadena += "\t" + columnas;  // 3 espacios entre coluna o \t
            columnas++;
        }
        cadena += "\n";
        for (i = 0; i < in; i++) {
            cadena += filas + "\t";
            for (j = 0; j < in; j++) {
                cadena += String.valueOf(m[i][j]) + "\t";
            }
            filas++;
            cadena = cadena + "\n";
        }
        return (cadena);
    }
    // se encadena texto con las colmunas y filas + contenido de la matrizAd de adyacencia
    static String mostrarIn(int m[][], int in, Aristas a[], int ia) {
        String cadena = "";
        char filas = 65;
        if (a[0] != null) {
            for (int k = 0; k < ia; k++) {
                cadena += "\t" + a[k].getNombreA();
            }
        }
        cadena += "\n";
        for (int i = 0; i < in; i++) {
            cadena += filas + "\t";
            for (int j = 0; j < ia; j++) {
                cadena += String.valueOf(m[i][j]) + "\t ";
            }
            filas++;
            cadena = cadena + "\n";
        }
        return (cadena);
    }
    static int buscaIndiceNodo(Nodos[] v, int in, String h) {
        int j;
        for (j = 0; j < in; j++) {
            //equalsIgnoreCase() Compara dos strings para ver si son iguales
            //ignorando las diferencias entre mayúsculas y minúsculas
            if (v[j].getNombre().equalsIgnoreCase(h)) {
                return j;
            }
        }
        return -1;
    }
    static Nodos buscaNodo(Nodos[] v, int in, int xx, int yy) {
        for (int i = 0; i < in; i++) {
            int x = v[i].getX();
            int y = v[i].getY();
            int radio = v[i].getD() + 7;
            if (xx > (x - radio) && xx < (x + radio) && yy > (y - radio) && yy < (y + radio)) {
                return v[i];
            }
        }
        return null;
    }
    
    // Comprueba si existe una arista unida a dos nodos
    boolean buscarArista(Nodos n1, Nodos n2) {
        for (Aristas arista: aristas) {
            if (arista != null) {
                boolean a = arista.getN1().equals(n1), b = arista.getN2().equals(n2);
                boolean c = arista.getN2().equals(n1), d = arista.getN1().equals(n2);
                if ((a && b) || (c && d)) {
                    return true;
                }
            }
        }
        return false;
    }
    
    // Comprueba si una arista pertenece a un nodo
    static int comprobarNodoArista(Nodos n, Aristas a) {
        if (a != null && a.getN1().equals(n) || a.getN2().equals(n)) {
            return 1;
        }
        return 0;
    }
    private void jPanel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseClicked
        // TODO add your handling code here:
        int x = evt.getX();
        int y = evt.getY();
        if (SwingUtilities.isLeftMouseButton(evt)) {
                if (buscaNodo(nodos, indiceNodos, x, y) == null) {
                    Nodos nodo = new Nodos(x, y, indiceNodos);
                    nodo.pintarNodo(jPanel2.getGraphics());
                    nodos[indiceNodos] = nodo;
                    indiceNodos++;
                    
                    jTextArea1.setText(mostrarAd(matrizAd, indiceNodos));
                    jTextArea1.setEditable(false);
                    jTextArea2.setText(mostrarIn(matrizIn, indiceNodos, aristas, indiceAristas));
                    jTextArea2.setEditable(false);
                    jTextArea3.setText(definicion(nodos, indiceNodos, aristas, indiceAristas));
                    jTextArea3.setEditable(false);
                } else JOptionPane.showMessageDialog(null, "Ya existe un nodo en esta área");
        }
        if (SwingUtilities.isRightMouseButton(evt)) {
            Nodos n = buscaNodo(nodos, indiceNodos, x, y);
            if (n != null) {
                if (nodoSelec1 == null) {
                    nodoSelec1 = n;
                } else if (nodoSelec2 == null && !n.equals(nodoSelec1)) {
                    nodoSelec2 = n;
                    // aquí falta controlar que no se repita la arista con un método buscarArista
                    if (!buscarArista(nodoSelec1, nodoSelec2)) {
                        try {
                            int xx = buscaIndiceNodo(nodos, indiceNodos, nodoSelec1.getNombre());
                            int yy = buscaIndiceNodo(nodos, indiceNodos, nodoSelec2.getNombre());
                            
                            int pesoArista = Integer.parseInt(JOptionPane.showInputDialog("Digite el peso de la aristas")); 
                            
                            matrizAd[xx][yy] = pesoArista;
                            matrizAd[yy][xx] = pesoArista;
                            
                            matrizIn[xx][indiceAristas] = pesoArista;
                            matrizIn[yy][indiceAristas] = pesoArista;
                            
                            Aristas arista = new Aristas(nodoSelec1, nodoSelec2, pesoArista);
                            aristas[indiceAristas] = arista;
                            
                            arista.pintarArista(jPanel2.getGraphics());
                            indiceAristas++;
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, "error");
                        }
                    } else JOptionPane.showMessageDialog(null, "Ya existe una arista entre los nodos seleccionados");
                    
                    jTextArea1.setText(mostrarAd(matrizAd, indiceNodos));
                    jTextArea1.setEditable(false);
                    
                    jTextArea2.setText(mostrarIn(matrizIn, indiceNodos, aristas, indiceAristas));
                    jTextArea2.setEditable(false);
                    
                    jTextArea3.setText(definicion(nodos, indiceNodos, aristas, indiceAristas));
                    jTextArea3.setEditable(false);
                    nodoSelec1 = null;
                    nodoSelec2 = null;
                }
            }
        }
    }//GEN-LAST:event_jPanel2MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        jPanel2.removeAll();
        jPanel2.repaint();
        jTextArea1.setText("");
        nodos = new Nodos[t];
        aristas = new Aristas[t];
        matrizAd = new int[t][t];
        matrizIn = new int[t][t*2];
        indiceNodos = 0;
        indiceAristas = 0;
        nodoSelec1 = null;
        nodoSelec2 = null;
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    // End of variables declaration//GEN-END:variables
}
